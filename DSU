class DSU {
public:
    vector<int> sz, par;
    int n;

    DSU(int n) : n(n) {
        sz = par = vector<int>(n + 2);
        for (int i = 0; i <= n; i++) {
            sz[i] = 1;
            par[i] = i;
        }
    }

    int find(int i) {
        if (i == par[i])return i;
        return par[i] = find(par[i]);
    }

    int same(int i, int j) {
        return find(i) == find(j);
    }

    bool merge(int i, int j) {
        i = find(i);
        j = find(j);
        if (i == j) return 0;
        if (sz[i] > sz[j])swap(i, j);
        sz[j] += sz[i];
        par[i] = j;
        n--;
        return 1;
    }

    int get_sz() {
        return n;
    }
};
